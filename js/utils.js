// Generated by CoffeeScript 2.5.1
  // import h                from "https://cdn.skypack.dev/solid-js@1.2.6/h"
var countTabs,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import _ from 'https://cdn.skypack.dev/lodash';

import {
  createSignal,
  createEffect,
  createMemo
} from "https://cdn.skypack.dev/solid-js@1.2.6";

import {
  createStore
} from "https://cdn.skypack.dev/solid-js@1.2.6/store";

import h from "https://cdn.skypack.dev/solid-js@1.2.6/h";

import {
  render
} from "https://cdn.skypack.dev/solid-js@1.2.6/web";

export var signal = createSignal;

export var effect = createEffect;

export var memo = createMemo;

export var N = 8;

export var col = (n) => {
  return modulo(n, N);
};

export var row = (n) => {
  return Math.floor(n / N);
};

export var sum = (arr) => {
  return arr.reduce(((a, b) => {
    return a + b;
  }), 0);
};

export var r4r = (a) => {
  return render(a, document.getElementById("app"));
};

export var map = _.map;

export var range = _.range;

export var log = console.log;

export var abs = Math.abs;

export var a = (...a) => {
  return h("a", a);
};

export var br = (...a) => {
  return h("br", a);
};

export var button = (...a) => {
  return h("button", a);
};

export var circle = (...a) => {
  return h("circle", a);
};

export var defs = (...a) => {
  return h("defs", a);
};

export var div = (...a) => {
  return h("div", a);
};

export var ellipse = (...a) => {
  return h("ellipse", a);
};

export var figure = (...a) => {
  return h("figure", a);
};

export var figCaption = (...a) => {
  return h("figCaption", a);
};

export var form = (...a) => {
  return h("form", a);
};

export var g = (...a) => {
  return h("g", a);
};

export var h1 = (...a) => {
  return h("h1", a);
};

export var h3 = (...a) => {
  return h("h3", a);
};

export var header = (...a) => {
  return h("header", a);
};

export var img = (...a) => {
  return h("img", a);
};

export var input = (...a) => {
  return h("input", a);
};

export var li = (...a) => {
  return h("li", a);
};

export var linearGradient = (...a) => {
  return h("linearGradient", a);
};

export var option = (...a) => {
  return h("option", a);
};

export var p = (...a) => {
  return h("p", a);
};

export var table = (...a) => {
  return h("table", a);
};

export var tr = (...a) => {
  return h("tr", a);
};

export var td = (...a) => {
  return h("td", a);
};

export var th = (...a) => {
  return h("th", a);
};

export var rect = (...a) => {
  return h("rect", a);
};

export var select = (...a) => {
  return h("select", a);
};

export var span = (...a) => {
  return h("span", a);
};

export var stop = (...a) => {
  return h("stop", a);
};

export var strong = (...a) => {
  return h("strong", a);
};

export var svg = (...a) => {
  return h("svg", a);
};

export var text = (...a) => {
  return h("text", a);
};

export var ul = (...a) => {
  return h("ul", a);
};

export var Position = function(index) {
  return `${"abcdefgh"[col(index)]}${"87654321"[row(index)]}`;
};

export var createLocalStore = (name, init) => {
  var localState, setState, state;
  localState = localStorage.getItem(name);
  [state, setState] = createStore(localState ? JSON.parse(localState) : init);
  createEffect(() => {
    return localStorage.setItem(name, JSON.stringify(state));
  });
  return [state, setState];
};

export var removeIndex = (array, index) => {
  var b;
  // [...array.slice 0, index, ...array.slice index + 1]
  a = array.slice(0, index);
  b = array.slice(index + 1);
  console.log(a.concat(b));
  return a.concat(b);
};

countTabs = (s) => {
  var c, i, len, n;
  n = 0;
  for (i = 0, len = s.length; i < len; i++) {
    c = s[i];
    if (c === "\t") {
      n++;
    } else {
      return n;
    }
  }
};

export var indented = (s) => {
  var arr, i, len, line, n, ref, results;
  ref = s.split("\n");
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    line = ref[i];
    n = countTabs(line);
    console.log(n);
    if (n === 0 && !line.includes("LINK")) {
      results.push(div({}, line, br({})));
    } else {
      results.push(div({
        style: "margin-left:" + n * 20 + "px"
      }, line.includes("LINK") ? (arr = line.split(" "), a({
        href: arr[2]
      }, arr[1])) : line));
    }
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcdXRpbHMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBeUU7QUFBQSxJQUFBLFNBQUE7RUFBQTs7QUFDekUsT0FBTyxDQUFQLE1BQUE7O0FBRUEsT0FBQTtFQUFTLFlBQVQ7RUFBdUIsWUFBdkI7RUFBcUMsVUFBckM7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUyxXQUFUO0NBQUEsTUFBQTs7QUFDQSxPQUFPLENBQVAsTUFBQTs7QUFDQSxPQUFBO0VBQVMsTUFBVDtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFPLE1BQUEsR0FBUzs7QUFDaEIsT0FBQSxJQUFPLE1BQUEsR0FBUzs7QUFDaEIsT0FBQSxJQUFPLElBQUEsR0FBTzs7QUFFZCxPQUFBLElBQU8sQ0FBQSxHQUFJOztBQUVYLE9BQUEsSUFBTyxHQUFBLEdBQU0sQ0FBQyxDQUFELENBQUEsR0FBQTtnQkFBTyxHQUFLO0FBQVo7O0FBQ2IsT0FBQSxJQUFPLEdBQUEsR0FBTSxDQUFDLENBQUQsQ0FBQSxHQUFBO29CQUFPLElBQUs7QUFBWjs7QUFDYixPQUFBLElBQU8sR0FBQSxHQUFNLENBQUMsR0FBRCxDQUFBLEdBQUE7U0FBUyxHQUFHLENBQUMsTUFBSixDQUFXLENBQUMsQ0FBQyxDQUFELEVBQUksQ0FBSixDQUFBLEdBQUE7V0FBVSxDQUFBLEdBQUk7RUFBZCxDQUFELENBQVgsRUFBOEIsQ0FBOUI7QUFBVDs7QUFDYixPQUFBLElBQU8sR0FBQSxHQUFNLENBQUMsQ0FBRCxDQUFBLEdBQUE7U0FBTyxNQUFBLENBQU8sQ0FBUCxFQUFVLFFBQVEsQ0FBQyxjQUFULENBQXdCLEtBQXhCLENBQVY7QUFBUDs7QUFFYixPQUFBLElBQU8sR0FBQSxHQUFNLENBQUMsQ0FBQzs7QUFDZixPQUFBLElBQU8sS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDakIsT0FBQSxJQUFPLEdBQUEsR0FBTSxPQUFPLENBQUM7O0FBQ3JC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TG9COztBQU9yQixTQUFBLEdBQVksQ0FBQyxDQUFELENBQUEsR0FBQTtBQUNaLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxDQUFBLEdBQUk7RUFDSixLQUFBLG1DQUFBOztJQUNDLElBQUcsQ0FBQSxLQUFLLElBQVI7TUFBa0IsQ0FBQSxHQUFsQjtLQUFBLE1BQUE7QUFBMkIsYUFBTyxFQUFsQzs7RUFERDtBQUZXOztBQUtaLE9BQUEsSUFBTyxRQUFBLEdBQVcsQ0FBQyxDQUFELENBQUEsR0FBQTtBQUNsQixNQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0FBQUM7QUFBQTtFQUFBLEtBQUEscUNBQUE7O0lBQ0MsQ0FBQSxHQUFJLFNBQUEsQ0FBVSxJQUFWO0lBQ0osT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFaO0lBQ0EsSUFBRyxDQUFBLEtBQUssQ0FBTCxJQUFXLENBQUksSUFBSSxDQUFDLFFBQUwsQ0FBYyxNQUFkLENBQWxCO21CQUNDLEdBQUEsQ0FBSSxDQUFBLENBQUosRUFDQyxJQURELEVBRUMsRUFBQSxDQUFHLENBQUEsQ0FBSCxDQUZELEdBREQ7S0FBQSxNQUFBO21CQUtDLEdBQUEsQ0FBSTtRQUFDLEtBQUEsRUFBTSxjQUFBLEdBQWlCLENBQUEsR0FBRSxFQUFuQixHQUF3QjtNQUEvQixDQUFKLEVBQ0ksSUFBSSxDQUFDLFFBQUwsQ0FBYyxNQUFkLENBQUgsR0FDSixDQUFLLEdBQUEsR0FBTSxJQUFJLENBQUMsS0FBTCxDQUFXLEdBQVgsQ0FBWCxFQUNLLENBQUEsQ0FBRTtRQUFDLElBQUEsRUFBSyxHQUFHLENBQUMsQ0FBRDtNQUFULENBQUYsRUFBaUIsR0FBRyxDQUFDLENBQUQsQ0FBcEIsQ0FETCxDQURJLEdBSUMsSUFMRixHQUxEOztFQUhELENBQUE7O0FBRGlCIiwic291cmNlc0NvbnRlbnQiOlsiIyBpbXBvcnQgaCAgICAgICAgICAgICAgICBmcm9tIFwiaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvc29saWQtanNAMS4yLjYvaFwiXHJcbmltcG9ydCBfICAgICAgICAgICAgICAgIGZyb20gJ2h0dHBzOi8vY2RuLnNreXBhY2suZGV2L2xvZGFzaCdcclxuXHJcbmltcG9ydCB7IGNyZWF0ZVNpZ25hbCwgY3JlYXRlRWZmZWN0LCBjcmVhdGVNZW1vIH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L3NvbGlkLWpzQDEuMi42XCJcclxuaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSAgZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L3NvbGlkLWpzQDEuMi42L3N0b3JlXCJcclxuaW1wb3J0IGggICAgICAgICAgICAgICAgZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L3NvbGlkLWpzQDEuMi42L2hcIlxyXG5pbXBvcnQgeyByZW5kZXIgfSAgICAgICBmcm9tIFwiaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvc29saWQtanNAMS4yLjYvd2ViXCJcclxuXHJcbmV4cG9ydCBzaWduYWwgPSBjcmVhdGVTaWduYWxcclxuZXhwb3J0IGVmZmVjdCA9IGNyZWF0ZUVmZmVjdFxyXG5leHBvcnQgbWVtbyA9IGNyZWF0ZU1lbW9cclxuXHJcbmV4cG9ydCBOID0gOFxyXG5cclxuZXhwb3J0IGNvbCA9IChuKSA9PiBuICUlIE5cclxuZXhwb3J0IHJvdyA9IChuKSA9PiBuIC8vIE5cclxuZXhwb3J0IHN1bSA9IChhcnIpID0+IGFyci5yZWR1Y2UoKChhLCBiKSA9PiBhICsgYiksIDApXHJcbmV4cG9ydCByNHIgPSAoYSkgPT4gcmVuZGVyIGEsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwiYXBwXCJcclxuXHJcbmV4cG9ydCBtYXAgPSBfLm1hcFxyXG5leHBvcnQgcmFuZ2UgPSBfLnJhbmdlXHJcbmV4cG9ydCBsb2cgPSBjb25zb2xlLmxvZ1xyXG5leHBvcnQgYWJzID0gTWF0aC5hYnNcclxuXHJcbmV4cG9ydCBhID0gKGEuLi4pID0+IGggXCJhXCIsIGFcclxuZXhwb3J0IGJyID0gKGEuLi4pID0+IGggXCJiclwiLCBhXHJcbmV4cG9ydCBidXR0b24gPSAoYS4uLikgPT4gaCBcImJ1dHRvblwiLCBhXHJcbmV4cG9ydCBjaXJjbGUgPSAoYS4uLikgPT4gaCBcImNpcmNsZVwiLCBhXHJcbmV4cG9ydCBkZWZzID0gKGEuLi4pID0+IGggXCJkZWZzXCIsIGFcclxuZXhwb3J0IGRpdiA9IChhLi4uKSA9PiBoIFwiZGl2XCIsIGFcclxuZXhwb3J0IGVsbGlwc2UgPSAoYS4uLikgPT4gaCBcImVsbGlwc2VcIiwgYVxyXG5leHBvcnQgZmlndXJlID0gKGEuLi4pID0+IGggXCJmaWd1cmVcIiwgYVxyXG5leHBvcnQgZmlnQ2FwdGlvbiA9IChhLi4uKSA9PiBoIFwiZmlnQ2FwdGlvblwiLCBhXHJcbmV4cG9ydCBmb3JtID0gKGEuLi4pID0+IGggXCJmb3JtXCIsIGFcclxuZXhwb3J0IGcgPSAoYS4uLikgPT4gaCBcImdcIiwgYVxyXG5leHBvcnQgaDEgPSAoYS4uLikgPT4gaCBcImgxXCIsIGFcclxuZXhwb3J0IGgzID0gKGEuLi4pID0+IGggXCJoM1wiLCBhXHJcbmV4cG9ydCBoZWFkZXIgPSAoYS4uLikgPT4gaCBcImhlYWRlclwiLGFcclxuZXhwb3J0IGltZyA9IChhLi4uKSA9PiBoIFwiaW1nXCIsIGFcclxuZXhwb3J0IGlucHV0ID0gKGEuLi4pID0+IGggXCJpbnB1dFwiLCBhXHJcbmV4cG9ydCBsaSA9IChhLi4uKSA9PiBoIFwibGlcIiwgYVxyXG5leHBvcnQgbGluZWFyR3JhZGllbnQgPSAoYS4uLikgPT4gaCBcImxpbmVhckdyYWRpZW50XCIsIGFcclxuZXhwb3J0IG9wdGlvbiA9IChhLi4uKSA9PiBoIFwib3B0aW9uXCIsIGFcclxuZXhwb3J0IHAgPSAoYS4uLikgPT4gaCBcInBcIiwgYVxyXG5leHBvcnQgdGFibGUgPSAoYS4uLikgPT4gaCBcInRhYmxlXCIsIGFcclxuZXhwb3J0IHRyID0gKGEuLi4pID0+IGggXCJ0clwiLCBhXHJcbmV4cG9ydCB0ZCA9IChhLi4uKSA9PiBoIFwidGRcIiwgYVxyXG5leHBvcnQgdGggPSAoYS4uLikgPT4gaCBcInRoXCIsIGFcclxuZXhwb3J0IHJlY3QgICA9IChhLi4uKSA9PiBoIFwicmVjdFwiLGFcclxuZXhwb3J0IHNlbGVjdCA9IChhLi4uKSA9PiBoIFwic2VsZWN0XCIsIGFcclxuZXhwb3J0IHNwYW4gPSAoYS4uLikgPT4gaCBcInNwYW5cIiwgYVxyXG5leHBvcnQgc3RvcCA9IChhLi4uKSA9PiBoIFwic3RvcFwiLCBhXHJcbmV4cG9ydCBzdHJvbmcgPSAoYS4uLikgPT4gaCBcInN0cm9uZ1wiLCBhXHJcbmV4cG9ydCBzdmcgPSAoYS4uLikgPT4gaCBcInN2Z1wiLCBhXHJcbmV4cG9ydCB0ZXh0ICAgPSAoYS4uLikgPT4gaCBcInRleHRcIixhXHJcbmV4cG9ydCB1bCA9IChhLi4uKSA9PiBoIFwidWxcIiwgYVxyXG5cclxuZXhwb3J0IFBvc2l0aW9uID0gKGluZGV4KSAtPiBcIiN7XCJhYmNkZWZnaFwiW2NvbCBpbmRleF19I3tcIjg3NjU0MzIxXCJbcm93IGluZGV4XX1cIlxyXG5cclxuXHJcbmV4cG9ydCBjcmVhdGVMb2NhbFN0b3JlID0gKG5hbWUsaW5pdCkgPT5cclxuXHRsb2NhbFN0YXRlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0gbmFtZVxyXG5cdFtzdGF0ZSwgc2V0U3RhdGVdID0gY3JlYXRlU3RvcmUgaWYgbG9jYWxTdGF0ZSB0aGVuIEpTT04ucGFyc2UgbG9jYWxTdGF0ZSBlbHNlIGluaXRcclxuXHRjcmVhdGVFZmZlY3QgKCkgPT4gbG9jYWxTdG9yYWdlLnNldEl0ZW0gbmFtZSwgSlNPTi5zdHJpbmdpZnkgc3RhdGVcclxuXHRbc3RhdGUsIHNldFN0YXRlXVxyXG5cclxuZXhwb3J0IHJlbW92ZUluZGV4ID0gKGFycmF5LCBpbmRleCkgPT5cclxuXHQjIFsuLi5hcnJheS5zbGljZSAwLCBpbmRleCwgLi4uYXJyYXkuc2xpY2UgaW5kZXggKyAxXVxyXG5cdGEgPSBhcnJheS5zbGljZSAwLCBpbmRleCBcclxuXHRiID0gYXJyYXkuc2xpY2UgaW5kZXggKyAxXHJcblx0Y29uc29sZS5sb2cgYS5jb25jYXQgYlxyXG5cdGEuY29uY2F0IGJcclxuXHJcbmNvdW50VGFicyA9IChzKSA9PlxyXG5cdG4gPSAwXHJcblx0Zm9yIGMgaW4gc1xyXG5cdFx0aWYgYyA9PSBcIlxcdFwiIHRoZW4gbisrIGVsc2UgcmV0dXJuIG5cclxuXHJcbmV4cG9ydCBpbmRlbnRlZCA9IChzKSA9PlxyXG5cdGZvciBsaW5lIGluIHMuc3BsaXQgXCJcXG5cIiBcclxuXHRcdG4gPSBjb3VudFRhYnMgbGluZVxyXG5cdFx0Y29uc29sZS5sb2cgblxyXG5cdFx0aWYgbiA9PSAwIGFuZCBub3QgbGluZS5pbmNsdWRlcyBcIkxJTktcIlxyXG5cdFx0XHRkaXYge30sXHJcblx0XHRcdFx0bGluZVxyXG5cdFx0XHRcdGJyIHt9XHJcblx0XHRlbHNlXHJcblx0XHRcdGRpdiB7c3R5bGU6XCJtYXJnaW4tbGVmdDpcIiArIG4qMjAgKyBcInB4XCJ9LFxyXG5cdFx0XHRcdGlmIGxpbmUuaW5jbHVkZXMgXCJMSU5LXCJcclxuXHRcdFx0XHRcdGFyciA9IGxpbmUuc3BsaXQgXCIgXCJcclxuXHRcdFx0XHRcdGEge2hyZWY6YXJyWzJdfSwgYXJyWzFdXHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0bGluZVxyXG4iXX0=
//# sourceURL=c:\github\2023-023-Wasa-Search\coffee\utils.coffee